{"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)","turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)","turbopack:///[project]/src/contexts/AppGraphContext.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/contexts/ThemeContext.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/contexts/FocusContext.tsx/__nextjs-internal-proxy.mjs","turbopack:///[next]/internal/font/google/geist_a71539c9.js","turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js","turbopack:///[project]/src/app/layout.tsx"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n","__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppGraphProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppGraphProvider() from the server but AppGraphProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AppGraphContext.tsx\",\n    \"AppGraphProvider\",\n);\nexport const useAppGraph = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppGraph() from the server but useAppGraph is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AppGraphContext.tsx\",\n    \"useAppGraph\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/ThemeContext.tsx\",\n    \"ThemeProvider\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/ThemeContext.tsx\",\n    \"useTheme\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const FocusProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FocusProvider() from the server but FocusProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/FocusContext.tsx\",\n    \"FocusProvider\",\n);\nexport const useFocus = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFocus() from the server but useFocus is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/FocusContext.tsx\",\n    \"useFocus\",\n);\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n","import type { Metadata } from \"next\"\nimport { Geist, Geist_Mono } from \"next/font/google\"\nimport { AppGraphProvider } from '@/contexts/AppGraphContext'\nimport { ThemeProvider } from '@/contexts/ThemeContext'\nimport { FocusProvider } from '@/contexts/FocusContext'\n\nimport \"./globals.css\"\n\nconst geistSans = Geist({\n\tvariable: \"--font-geist-sans\",\n\tsubsets: [\"latin\"],\n})\nconst geistMono = Geist_Mono({\n\tvariable: \"--font-geist-mono\",\n\tsubsets: [\"latin\"],\n})\n\nexport const metadata: Metadata = {\n\ttitle: \"Zlitni Tree\",\n\tdescription: \"See whether there is another you in Zlitni's family!\",\n};\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<body className={`${geistSans.variable} ${geistMono.variable}`}>\n\t\t\t\t<ThemeProvider>\n\t\t\t\t\t<AppGraphProvider>\n\t\t\t\t\t\t<FocusProvider>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</FocusProvider>\n\t\t\t\t\t</AppGraphProvider>\n\t\t\t\t</ThemeProvider>\n\t\t\t</body>\n\t\t</html>\n\t)\n}"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6]}