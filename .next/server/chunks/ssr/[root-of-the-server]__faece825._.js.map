{"version":3,"sources":["turbopack:///[project]/src/app/auth/callback/page.tsx"],"sourcesContent":["// app/auth/callback/page.tsx\r\n'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { createClient } from '@/lib/supabase';\r\n\r\nfunction parseHashParams(hash: string) {\r\n  const h = new URLSearchParams(hash.replace(/^#/, ''));\r\n  return {\r\n    access_token: h.get('access_token'),\r\n    refresh_token: h.get('refresh_token'),\r\n    error: h.get('error_description') || h.get('error'),\r\n  };\r\n}\r\n\r\nexport default function CallbackPage() {\r\n  const supabase = createClient();\r\n  const [status, setStatus] = useState('Processing…');\r\n  const [role, setRole] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    (async () => {\r\n      const url = new URL(window.location.href);\r\n\r\n      // 0) If we already have a session, don’t try to exchange again\r\n      const { data: sess0 } = await supabase.auth.getSession();\r\n      if (sess0.session) {\r\n        setStatus('Session already active.');\r\n      } else {\r\n        // 1) Try implicit/hash first\r\n        const { access_token, refresh_token, error: hashErr } = parseHashParams(url.hash);\r\n        if (hashErr) {\r\n          setStatus(`Auth error: ${hashErr}`);\r\n        } else if (access_token && refresh_token) {\r\n          const { error } = await supabase.auth.setSession({ access_token, refresh_token });\r\n          if (error) {\r\n            setStatus(`Auth error: ${error.message}`);\r\n          } else {\r\n            setStatus('Signed in via implicit flow.');\r\n          }\r\n        } else if (url.searchParams.get('code')) {\r\n          // 2) Try PKCE exchange only if we don't have a session yet\r\n          const { error } = await supabase.auth.exchangeCodeForSession(url.toString());\r\n          if (error) {\r\n            // If the session gets established by other means, this can throw.\r\n            // We’ll check again below and only surface the error if still unauthenticated.\r\n            setStatus(`Auth exchange warning: ${error.message}`);\r\n          } else {\r\n            setStatus('Signed in via PKCE flow.');\r\n          }\r\n        } else {\r\n          setStatus('No auth params found.');\r\n        }\r\n      }\r\n\r\n      // 3) Re-check session and fetch role\r\n      const { data: sess1 } = await supabase.auth.getSession();\r\n      if (sess1.session) {\r\n        const { data: appRole, error: rErr } = await supabase.rpc('app_role');\r\n        if (!rErr) setRole((appRole as any) ?? null);\r\n        setStatus((s) => (s.startsWith('Auth error') ? s : 'Done.'));\r\n        // 4) Clean the URL (remove tokens/code)\r\n        const clean = `${location.origin}/auth/callback`;\r\n        window.history.replaceState({}, '', clean);\r\n      } else {\r\n        // Still no session -> leave whatever error/status we set earlier\r\n      }\r\n    })();\r\n  }, [supabase]);\r\n\r\n  return (\r\n    <main style={{ maxWidth: 480, margin: '48px auto', display: 'grid', gap: 12 }}>\r\n      <h1>Callback</h1>\r\n      <div>{status}</div>\r\n      <div>Your role: <b>{role ?? 'anon'}</b></div>\r\n      <a href=\"/canvas\">Go home</a>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"8IAGA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAWe,SAAS,IACtB,IAAM,EAAW,CAAA,EAAA,EAAA,YAAA,AAAY,IACvB,CAAC,EAAQ,EAAU,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,eAC/B,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAgB,MAqDhD,MAnDA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KAER,CAAC,UACC,IAAM,EAAM,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI,EAGlC,CAAE,KAAM,CAAK,CAAE,CAAG,MAAM,EAAS,IAAI,CAAC,UAAU,GACtD,GAAI,EAAM,OAAO,CACf,CADiB,CACP,+BACL,CAEL,GAAM,CAAE,cAAY,eAAE,CAAa,CAAE,MAAO,CAAO,CAAE,CAAG,AAzBhE,SAAyB,AAAhB,CAA4B,EACnC,IAAM,EAAI,IAAI,gBAAgB,EAAK,OAAO,CAAC,KAAM,KACjD,MAAO,CACL,aAAc,EAAE,GAAG,CAAC,gBACpB,cAAe,EAAE,GAAG,CAAC,iBACrB,MAAO,EAAE,GAAG,CAAC,sBAAwB,EAAE,GAAG,CAAC,QAC7C,CACF,EAkBgF,EAAI,IAAI,EAChF,GAAI,EACF,EAAU,CAAC,IADA,QACY,EAAE,EAAA,CAAS,OAC7B,GAAI,GAAgB,EAAe,CACxC,GAAM,OAAE,CAAK,CAAE,CAAG,MAAM,EAAS,IAAI,CAAC,UAAU,CAAC,cAAE,EAAc,eAAc,GAC3E,EACF,EAAU,CAAC,EADF,UACc,EAAE,EAAM,OAAO,CAAA,CAAE,EAExC,EAAU,+BAEd,MAAO,GAAI,EAAI,YAAY,CAAC,GAAG,CAAC,QAAS,CAEvC,GAAM,OAAE,CAAK,CAAE,CAAG,MAAM,EAAS,IAAI,CAAC,sBAAsB,CAAC,EAAI,QAAQ,IACrE,EAGF,EAAU,CAAC,EAHF,qBAGyB,EAAE,EAAM,OAAO,CAAA,CAAE,EAEnD,EAAU,2BAEd,MACE,CADK,CACK,wBAEd,CAGA,GAAM,CAAE,KAAM,CAAK,CAAE,CAAG,MAAM,EAAS,IAAI,CAAC,UAAU,GACtD,GAAI,EAAM,OAAO,CAAE,CACjB,GAAM,CAAE,KAAM,CAAO,CAAE,MAAO,CAAI,CAAE,CAAG,MAAM,EAAS,GAAG,CAAC,WACtD,CAAC,GAAM,EAAS,GAAmB,MACvC,EAAW,AAAD,GAAQ,EAAE,UAAU,CAAC,cAAgB,EAAI,SAEnD,IAAM,EAAQ,CAAA,EAAG,SAAS,MAAM,CAAC,cAAc,CAAC,CAChD,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,EAAG,GAAI,EACtC,CAGF,CAAC,GACH,EAJW,AAIR,CAAC,EAAS,EAGX,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,MAAO,CAAE,SAAU,IAAK,OAAQ,YAAa,QAAS,OAAQ,IAAK,EAAG,YAC1E,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,UAAG,aACJ,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,UAAK,IACN,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WAAI,cAAW,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,UAAG,GAAQ,YAC5B,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAK,mBAAU,cAGxB"}