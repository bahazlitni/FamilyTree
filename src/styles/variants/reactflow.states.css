/* /styles/variants/reactflow.states.css */
@layer variants {
   /* -----------------------------------------------------------
   * STATE VARIABLES (scoped per-state via CSS custom props)
   * -----------------------------------------------------------
   * We map each state to a full mini-theme:
   * - --state-bg / --state-bg-hover / --state-bg-focus
   * - --state-border / --state-border-hover / --state-border-focus
   * - --state-text
   * - --color (used by outline/stroke for edges)
   *
   * Uses your palette tokens so dark/light themes inherit correctly.
   */

   /* Highlight = yellowish (warning) */
   .is-highlighted {
      --state-bg: var(--element-warning-hover);
      --state-bg-hover: var(--element-warning);
      --state-bg-focus: var(--element-warning-focus);

      --state-border: var(--border-warning);
      --state-border-hover: var(--border-warning-hover);
      --state-border-focus: var(--border-warning-focus);

      --state-text: var(--text-warning);

      /* edge/outline color */
      --color: var(--border-warning-focus);
   }

   /* Pick-highlight = hover while in picking mode (a sharper warm tone) */
   .is-pick-highlight {
      /* Slightly “hotter” than plain highlight so it stands out during picking */
      --state-bg: color-mix(
         in oklab,
         var(--element-warning-hover),
         var(--element-error-hover) 30%
      );
      --state-bg-hover: color-mix(
         in oklab,
         var(--element-warning),
         var(--element-error) 25%
      );
      --state-bg-focus: color-mix(
         in oklab,
         var(--element-warning-focus),
         var(--element-error-focus) 30%
      );

      --state-border: color-mix(
         in oklab,
         var(--border-warning),
         var(--border-error) 35%
      );
      --state-border-hover: color-mix(
         in oklab,
         var(--border-warning-hover),
         var(--border-error-hover) 35%
      );
      --state-border-focus: color-mix(
         in oklab,
         var(--border-warning-focus),
         var(--border-error-focus) 35%
      );

      --state-text: var(--text-warning);

      --color: var(--border-warning-focus);
   }

   /* Selected = blueish (primary) */
   .is-selected {
      /* You already defined selected tokens in tokens.css — reuse them */
      --state-bg: var(--element-selected);
      --state-bg-hover: var(--element-selected-hover);
      --state-bg-focus: var(--element-selected-focus);

      --state-border: var(--border-selected);
      --state-border-hover: var(--border-selected-hover);
      --state-border-focus: var(--border-selected-focus);

      --state-text: var(--text-selected);

      --color: var(--border-selected-focus);
   }

   /* Picked = vivid reddish (danger/error family) */
   .is-picked {
      --state-bg: var(--element-error-hover);
      --state-bg-hover: var(--element-error);
      --state-bg-focus: var(--element-error-focus);

      --state-border: var(--border-error);
      --state-border-hover: var(--border-error-hover);
      --state-border-focus: var(--border-error-focus);

      /* In dark theme you exposed --text-error as a soft red-on-dark; in light
       theme it flips to a dark red readable on pale bg — perfect. */
      --state-text: var(--text-error);

      --color: var(--border-error-focus);
   }

   /* -----------------------------------------------------------
   * NODE LOOK (background, text, borders, outline/glow)
   * ----------------------------------------------------------- */

   .is-highlighted.rf-node,
   .is-pick-highlight.rf-node,
   .is-selected.rf-node,
   .is-picked.rf-node {
      background: var(--state-bg);
      color: var(--state-text);
      outline-color: var(--color);
      transition: background-color 120ms ease, box-shadow 120ms ease,
         outline-color 120ms ease, color 120ms ease;
   }
   .is-highlighted.rf-node *,
   .is-pick-highlight.rf-node *,
   .is-selected.rf-node *,
   .is-picked.rf-node * {
      color: var(--state-text);
   }

   /* Hover/focus refinements */
   .is-highlighted.rf-node:hover,
   .is-pick-highlight.rf-node:hover,
   .is-selected.rf-node:hover,
   .is-picked.rf-node:hover {
      background: var(--state-bg-hover);
      outline-color: var(--state-border-hover);
   }

   .is-highlighted.rf-node:focus-within,
   .is-pick-highlight.rf-node:focus-within,
   .is-selected.rf-node:focus-within,
   .is-picked.rf-node:focus-within {
      background: var(--state-bg-focus);
      outline-color: var(--state-border-focus);
   }

   /* -----------------------------------------------------------
   * EDGES (strokes + motion)
   * ----------------------------------------------------------- */

   .is-highlighted.rf-edge,
   .is-pick-highlight.rf-edge,
   .is-selected.rf-edge,
   .is-picked.rf-edge {
      stroke-dasharray: 10 10;
      stroke-width: 3px;
      stroke: var(--color);
      animation: dashmove 1s linear infinite;
      transition: stroke 120ms ease, stroke-width 120ms ease, filter 120ms ease;
   }

   /* Slightly stronger emphasis on picked edges */
   .is-picked.rf-edge {
      stroke-width: 3.25px;
   }
}
